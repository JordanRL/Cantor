version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  fermat-unit-testing:
    executors:
      php-decimal:
        docker:
          - image: jordanledoux/fermat-base:0.0.3-decimal
        resource_class: medium
        environment:
          - XDEBUG_MODE: coverage
      php-bcmath:
        docker:
          - image: jordanledoux/fermat-base:0.0.3-bcmath
        resource_class: medium
        environment:
          - XDEBUG_MODE: coverage
      php-with-cc-reporter:
        docker:
          - image: jordanledoux/fermat-base:0.0.3-bcmath
        resource_class: small
        environment:
          - CC_TEST_REPORTER_ID: b445f8e454cd84763818d6b8aad719678e28fd671ce389e404e2851a78c6550f
    commands:
      composer-update:
        description: "Updating Dependencies With Composer"
        steps:
          - run:
              name: Running Composer
              command: composer update
      phpunit-prep:
        description: "Prepping For Unit Tests"
        steps:
          - run:
              name: Setting Up Output Directory
              command: |
                mkdir build
                mkdir build/logs
                mkdir ~/phpunit
      phpunit-run:
        description: "Running Unit Tests With PHPUnit"
        parameters:
          with-parallel:
            type: boolean
            default: false
        steps:
          - when:
              condition: <<parameters.with-parallel>>
              steps:
                - run:
                    name: Running Unit Tests With Parallelization
                    command: |
                      . ./parallel.sh
                      vendor/bin/phpunit --log-junit ~/phpunit/junit.xml --testsuite ${PHPUNIT_SUITE}
          - unless:
              condition: <<parameters.with-parallel>>
              steps:
                - run:
                    name: Running Unit Tests
                    command: |
                      vendor/bin/phpunit --log-junit ~/phpunit/junit.xml
      phpunit-run-without-large:
        description: "Running Unit Tests With PHPUnit (Without Large Tests)"
        parameters:
          with-parallel:
            type: boolean
            default: false
        steps:
          - when:
              condition: <<parameters.with-parallel>>
              steps:
                - run:
                    name: Running Unit Tests With Parallelization
                    command: |
                      . ./parallel.sh
                      vendor/bin/phpunit --exclude-group large --log-junit ~/phpunit/junit.xml --testsuite ${PHPUNIT_SUITE}
          - unless:
              condition: <<parameters.with-parallel>>
              steps:
                - run:
                    name: Running Unit Tests
                    command: |
                      vendor/bin/phpunit --exclude-group large --log-junit ~/phpunit/junit.xml
      setup-project:
        parameters:
          for-tests:
            type: boolean
            default: true
        description: "Run all tasks prior to executing tests"
        steps:
          - checkout
          - attach_workspace:
              at: ./tmp
          - composer-update
          - when:
              condition: <<parameters.for-tests>>
              steps:
                - phpunit-prep
      run-tests:
        parameters:
          decimal:
            type: boolean
            default: false
          with-parallel:
            type: boolean
            default: false
        description: "Execute tests"
        steps:
          - when:
              condition: <<parameters.decimal>>
              steps:
                - phpunit-run:
                    with-parallel: <<parameters.with-parallel>>
          - unless:
              condition: <<parameters.decimal>>
              steps:
                - phpunit-run-without-large:
                    with-parallel: <<parameters.with-parallel>>
      wrap-up-tests:
        parameters:
          cc-file:
            type: string
            default: "bcmath"
        description: "Run all post test tasks"
        steps:
          - store_test_results:
              path: ~/phpunit
          - run:
              name: Format Partial Code Coverage
              command: |
                ./tmp/cc-test-reporter format-coverage -t clover -o "tmp/codeclimate.<<parameters.cc-file>>$CIRCLE_NODE_INDEX.json" build/logs/coverage.clover
          - persist_to_workspace:
              root: tmp
              paths:
                - codeclimate*
    jobs:
      cc-coverage-reporter:
        executor: php-with-cc-reporter
        steps:
          - run:
              name: Download cc-test-reporter
              command: |
                mkdir -p tmp/
                curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
                chmod +x ./tmp/cc-test-reporter
                ./tmp/cc-test-reporter before-build
          - persist_to_workspace:
              root: tmp
              paths:
                - cc-test-reporter
      tests-bcmath:
        executor: php-bcmath
        parallelism: 6
        steps:
          - setup-project:
              for-tests: true
          - run-tests:
              decimal: false
              with-parallel: true
          - wrap-up-tests:
              cc-file: "bcmath"
      tests-decimal:
        executor: php-decimal
        parallelism: 6
        steps:
          - setup-project:
              for-tests: true
          - run-tests:
              decimal: true
              with-parallel: true
          - wrap-up-tests:
              cc-file: "decimal"
      upload-coverage:
        executor: php-with-cc-reporter
        steps:
          - attach_workspace:
              at: ./tmp
          - run:
              name: Upload coverage results to Code Climate
              command: |
                ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 12 -o tmp/codeclimate.total.json
                ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json
          - run:
              name: Cleaning up Workspace
              command: rm -rf ./tmp/*

jobs:
  generate-docs:
    executor: fermat-unit-testing/php-decimal
    steps:
      - fermat-unit-testing/setup-project:
          for-tests: false
      - run:
          name: Generate Docs Using Samsara/Roster
          command: vendor/bin/roster

workflows:
  unit-test-workflow:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - fermat-unit-testing/cc-coverage-reporter
      - fermat-unit-testing/tests-bcmath:
          requires:
            - fermat-unit-testing/cc-coverage-reporter
      - fermat-unit-testing/tests-decimal:
          requires:
            - fermat-unit-testing/cc-coverage-reporter
      - fermat-unit-testing/upload-coverage:
          requires:
            - fermat-unit-testing/tests-bcmath
            - fermat-unit-testing/tests-decimal
  release-workflow:
    jobs:
      - generate-docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/