version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  fermat-unit-testing:
    executors:
      php-with-xdebug:
        parameters:
          version:
            description: "The version of PHP to load"
            default: "8.1"
            type: string
        docker:
          - image: cimg/php:<<parameters.version>>
        resource_class: medium
        environment:
          - XDEBUG_MODE: coverage
      php-with-cc-reporter:
        docker:
          - image: cimg/php:8.1
        resource_class: small
        environment:
          - CC_TEST_REPORTER_ID: b445f8e454cd84763818d6b8aad719678e28fd671ce389e404e2851a78c6550f
    commands:
      composer-update:
        description: "Updating Dependencies With Composer"
        steps:
          - run:
              name: Running Composer
              command: composer update
      phpunit-prep:
        description: "Prepping For Unit Tests"
        steps:
          - run:
              name: Setting Up Output Directory
              command: |
                mkdir build
                mkdir build/logs
      phpunit-run:
        description: "Running Unit Tests With PHPUnit"
        steps:
          - run:
              name: Running Unit Tests
              command: |
                vendor/bin/phpunit
      phpunit-run-without-large:
        description: "Running Unit Tests With PHPUnit (Without Large Tests)"
        steps:
          - run:
              name: Running Unit Tests (W/O Large)
              command: |
                vendor/bin/phpunit --exclude-group large
      xdebug-enable:
        description: "Enabling XDebug Extension"
        steps:
          - run:
              name: Enabling XDebug Extension
              command: |
                sudo -E install-php-extensions xdebug
                sudo docker-php-ext-enable xdebug
      gmp-enable:
        description: "Enabling GMP Extension"
        steps:
          - run:
              name: Enabling GMP Extension
              command: sudo -E install-php-extensions gmp
      decimal-install:
        description: "Installing Decimal Extension"
        steps:
          - run:
              name: Installing Decimal Extension
              command: |
                sudo apt update
                sudo apt install libmpdec-dev
                sudo pecl install decimal
      setup-for-tests:
        parameters:
          decimal:
            type: boolean
            default: false
        description: "Run all tasks prior to executing tests"
        steps:
          - checkout
          - attach_workspace:
              at: ./tmp
          - fermat-unit-testing/gmp-enable
          - fermat-unit-testing/xdebug-enable
          - when:
              condition: <<parameters.decimal>>
              steps:
                - fermat-unit-testing/decimal-install
          - fermat-unit-testing/composer-update
          - fermat-unit-testing/phpunit-prep
      run-tests:
        parameters:
          decimal:
            type: boolean
            default: false
        description: "Run all tasks prior to executing tests"
        steps:
          - when:
              condition: <<parameters.decimal>>
              steps:
                - fermat-unit-testing/phpunit-run
          - unless:
              condition: <<parameters.decimal>>
              steps:
                - fermat-unit-testing/phpunit-run-without-large
      wrap-up-tests:
        description: "Run all post test tasks"
        steps:
          - store_test_results:
              path: ./build/logs
          - run:
              name: Format Partial Code Coverage
              command: |
                ./tmp/cc-test-reporter format-coverage -t clover -o "tmp/codeclimate.bcmath$CIRCLE_NODE_INDEX.json" build/logs/coverage.clover
          - persist_to_workspace:
              root: tmp
              paths:
                - codeclimate*
    jobs:
      cc-coverage-reporter:
        executor: fermat-unit-testing/php-with-cc-reporter
        steps:
          - run:
              name: Download cc-test-reporter
              command: |
                mkdir -p tmp/
                curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
                chmod +x ./tmp/cc-test-reporter
                ./tmp/cc-test-reporter before-build
          - persist_to_workspace:
              root: tmp
              paths:
                - cc-test-reporter
      tests-bcmath:
        executor: fermat-unit-testing/php-with-xdebug
        steps:
          - fermat-unit-testing/setup-for-tests:
              with:
                decimal: false
          - fermat-unit-testing/run-tests:
              with:
                decimal: false
          - fermat-unit-testing/wrap-up-tests
      tests-decimal:
        executor: fermat-unit-testing/php-with-xdebug
        steps:
          - fermat-unit-testing/setup-for-tests:
              with:
                decimal: true
          - fermat-unit-testing/run-tests:
              with:
                decimal: true
          - fermat-unit-testing/wrap-up-tests
      upload-coverage:
        executor: fermat-unit-testing/php-with-cc-reporter
        steps:
          - attach_workspace:
              at: ./tmp
          - run:
              name: Upload coverage results to Code Climate
              command: |
                ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 2 -o tmp/codeclimate.total.json
                ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json
          - run:
              name: Cleaning up Workspace
              command: rm -rf ./tmp/*

jobs:
  generate-docs:
    docker:
      - image: cimg/php:8.1
    resource_class: medium
    steps:
      - checkout
      - gmp-enable
      - xdebug-enable
      - composer-update
      - run:
          name: Generate Docs Using Samsara/Roster
          command: vendor/bin/roster
  generate-phpmetrics:
    environment:
      - DEBIAN_FRONTEND: noninteractive
    docker:
      - image: cimg/php:8.1
    resource_class: medium
    steps:
      - checkout
      - gmp-enable
      - xdebug-enable
      - composer-update
      - run:
          name: Installing YAML Extension
          command: |
            sudo apt update
            sudo apt-get install libyaml-dev
            printf "\n" | sudo pecl install yaml
      - run:
          name: Preparing Build Directory
          command: |
            mkdir build
            mkdir build/metrics
      - run:
          name: Downloading PHPMetrics
          command: composer require 'phpmetrics/phpmetrics'
      - run:
          name: Compiling Metrics
          command: vendor/bin/phpmetrics --config=phpmetrics.yml
      - store_artifacts:
          path: ./build/metrics

workflows:
  metrics-workflow:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - generate-phpmetrics:
          filters:
            branches:
              only: master
  unit-test-workflow:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - fermat-unit-tests/cc-coverage-reporter
      - fermat-unit-tests/tests-bcmath:
          requires:
            - cc-coverage-reporter
      - fermat-unit-tests/tests-decimal:
          requires:
            - cc-coverage-reporter
      - fermat-unit-tests/upload-coverage:
          requires:
            - tests-bcmath
            - tests-decimal
  release-workflow:
    jobs:
      - generate-docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/